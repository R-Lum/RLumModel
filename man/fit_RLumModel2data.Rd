% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_RLumModel2data.R
\name{fit_RLumModel2data}
\alias{fit_RLumModel2data}
\title{Fit model parameters to experimental data}
\usage{
fit_RLumModel2data(model, sequence, seq.step2fit, norm = TRUE,
  lab.dose_rate = 1, simulate_sample_history = FALSE, verbose = FALSE,
  show_structure = FALSE, own_parameters = NULL,
  own_state_parameters = NULL, own_start_temperature = NULL, plot = FALSE,
  ...)
}
\arguments{
\item{model}{\code{\link{character}} (\bold{required}): set model to be used. Available models are:
"Bailey2001", "Bailey2002", "Bailey2004", "Pagonis2007", "Pagonis2008"}

\item{sequence}{\code{\link{list}} (\bold{required}): set sequence to model as \code{\link{list}} or as *.seq file from the
Riso sequence editor. To simulate SAR measurements there is an extra option to set the sequence list (cf. details).
See \code{\link{model_LuminescenceSignals}} for a detailed description.}

\item{seq.step2fit}{\code{\link{numeric}} (\bold{required}): Choose the sequence step number to fit.
\bold{Note: Only sequence steps with an signal output are allowed! This sequence steps are:
RF, TL, OSL, LM-OSL}}

\item{norm}{\code{\link{logical}} (with default): Argument to normalize the signal. 
This is recommended when fitting parameters to experimental results.}

\item{lab.dose_rate}{\code{\link{numeric}} (with default): laboratory dose rate in XXX
Gy/s for calculating seconds into Gray in the *.seq file.}

\item{simulate_sample_history}{\code{\link{logical}} (with default): FALSE (with default): simulation begins at laboratory conditions, TRUE: simulations begins at crystallization (all levels 0)
process#'}

\item{verbose}{\code{\link{logical}} (with default): Verbose mode on/off.}

\item{show_structure}{\code{\link{logical}} (with default): Shows the structure of the result.
Recommended to show record.id to analyse concentrations.}

\item{own_parameters}{\code{\link{list}} (with default): This argument allows the user to submit own parameter sets. The \code{\link{list}}
has to contain the following items:
\itemize{
 \item{N: Concentration of electron- and hole traps [cm^(-3)]}
 \item{E: Electron/Hole trap depth [eV}
 \item{s: Frequency factor [s^(-1)]}
 \item{A: Conduction band to electron trap and valence band to hole trap transition probability [s^(-1) * cm^(3)]. 
 \bold{CAUTION: Not every publication uses 
 the same definition of parameter A and B! See vignette "RLumModel - Usage with own parameter sets" for further details}}
 \item{B: Conduction band to hole centre transition probability [s^(-1) * cm^(3)].}
 \item{Th: Photo-eviction constant or photoionisation cross section, respectively}
 \item{E_th: Thermal assistence energy [eV]}
 \item{k_B: Boltzman constant 8.617e-05 [eV/K]}
 \item{W: activation energy 0.64 [eV] (for UV)}
 \item{K: 2.8e7 (dimensionless constant)}
 \item{model: "customized"}
 \item{R (optional): Ionisation rate (pair production rate) equivalent to 1 Gy/s [s^(-1) * cm^(-3)]}
 }

For further details see Bailey 2001, Wintle 1975, vignette "RLumModel - Using own parameter sets" 
and example 3.}

\item{own_state_parameters}{\code{\link{numeric}} (with default): Some publications (e.g. Pagonis 2009)
offer state parameters. With this argument the user can submit this state parameters. \bold{Note:} 
You have to submit the state parameters for the conduction band and the valence band, too. For further details
see vignette ""RLumModel - Using own parameter sets" and example 3.}

\item{own_start_temperature}{\code{\link{numeric}} (with default): Parameter to control the start temperature (in deg. C) of
a simulation. This parameter takes effect only when 'model = "customized"' is choosen.}

\item{plot}{\code{\link{logical}} (with default): Enables or disables plot output. 
Recommended: No plot output, because fitting function will run a lot of times.}

\item{\dots}{further arguments and graphical parameters passed to
\code{\link{plot.default}}. See details for further information.}
}
\value{
This function returns a function, which is necessary for further calculations
with the package "FME".
}
\description{
Fit model parameters to experimental data
}
\section{Function version}{
 0.1.0 (2018-05-16 11:16:22)
}

\examples{

 sequence <- list(
   TL = c(20, 450, 5),
   IRR = c(20, 5, 0.5),
   TL = c(0, 450, 5))

 model <- "Pagonis2007"
 
 parms <- extract_parameters2FME(model = model)

 func_FME <- fit_RLumModel2data(
   sequence = sequence, 
   model = model, 
   seq.step2fit = 3)
 
 SensR <- FME::sensFun(
   func = func_FME,
   parms = parms,
   sensvar = "signal",
   varscale = 1,
   senspar = c("N1","s1","E1"))
   
 plot(
   SensR, 
   legpos = "bottomleft", 
   xlab = "Temperature [\\u00B0C]", 
   main = "Local Sensitivity Analysis TL")  
     
}
\references{
Soetaert K., Petzoldt T., 2010: Inverse Modelling, Sensitivity and Monte Carlo Analysis in
R Using Package FME. 
Journal of Statistical Software, 33, 1-28.
}
\seealso{
\code{\link[FME]{sensFun}}, \code{\link[FME]{sensRange}}, 
\code{\link{model_LuminescenceSignals}}, \code{\link{extract_parameters2FME}}
}
\author{
Johannes Friedrich, University of Bayreuth (Germany)
}
